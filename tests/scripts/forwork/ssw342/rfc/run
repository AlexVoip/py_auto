#!/bin/bash

# Тест услуги RFC. Версия ПО 3.3.
# 
# Условия теста: создано два SIP-абонента

# Переменные командной строки
# $EXTER_IP SSW_IP_address
# $IP SIPP_IP_address

. tests/scripts/ssw342/conf

# Путь к скриптам
ROOT_DIR=$(pwd)
SRC_PATH=$ROOT_DIR/tests/scripts/ssw342/rfc
create_dir $SRC_PATH/temp
TEMP_PATH=$SRC_PATH/temp
create_file $TEMP_PATH/ex_code.txt
create_dir log/ssw342_rfc
LOG_PATH=log/ssw342_rfc

create_file $LOG_PATH/log.txt

# Путь к sipp
#SIPP_PATH=../../../opt/sipp

# Переменные для подсчета успешных, неуспешных вызовов и номер теста
FAIL_COUNT=0
SUCC_COUNT=0
COUNT=0

# Создаем файлы с данными
echo "SEQUENTIAL;
$USER_A;$DOM_A;$USER_D_CF;" > $TEMP_PATH/$USER_A.csv
echo "SEQUENTIAL;
$USER_B;$DOM_B;*$KOD_RFC#;*#$KOD_RFC#;#$KOD_RFC#;" > $TEMP_PATH/$USER_B-ss.csv
echo "SEQUENTIAL;
$USER_C;$DOM_C;$USER_B" > $TEMP_PATH/$USER_C-$USER_B.csv
echo "SEQUENTIAL;
$USER_D_CF;$DOM_D_CF;*$KOD_CFU*$USER_B#;*#$KOD_CFU#;#$KOD_CFU#;" > $TEMP_PATH/$USER_D_CF.csv

FINISH ()
{
# Unregistration
COUNT=$(($COUNT+1))
T_NAME=UnRegistration
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/reg_auth0.xml -inf $TEMP_PATH/$USER_A.csv -mi $IP -s $AUTH_A -ap $PASS_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 200s -timeout_error
REZULT_A
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/reg_auth0.xml -inf $TEMP_PATH/$USER_B-ss.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error
REZULT_A
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/reg_auth0.xml -inf $TEMP_PATH/$USER_D_CF.csv -mi $IP -s $AUTH_D_CF -ap $PASS_D_CF -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_D_CF -recv_timeout 200s -timeout_error 
REZULT_A

# Удаляем файлы с данными
sudo rm $TEMP_PATH/$USER_A.csv
sudo rm $TEMP_PATH/$USER_B-ss.csv
sudo rm $TEMP_PATH/$USER_D_CF.csv
sudo rm $TEMP_PATH/$USER_C-$USER_B.csv

#    Читаем exit коды, чтобы убедиться, что все UAS отработали корректно.
EX_FAIL=0
while read line;do
     excode=`echo $line | cut -d ' ' -f 3`
     name=`echo $line | cut -d ' ' -f 1`
     echo "[DEBUG] Exit code from test $name equal $excode" >> $LOG_PATH/log.txt
     if [ "$excode" != "0" ];then
        EX_FAIL=1
        FAIL_COUNT=$(($FAIL_COUNT+1))
     fi
done < $TEMP_PATH/ex_code.txt

sudo rm $TEMP_PATH/ex_code.txt

# Вывод результата  
echo "Success $SUCC_COUNT, Failed $FAIL_COUNT"  

  if [[ $EX_FAIL -eq 0 && $FAIL_COUNT -eq 0 ]]
        then 
        exit 0
        else 
        exit 1
  fi
}

# Функция подсчета успешных и неуспешных вызовов
REZULT_A ()
{
if test $? -eq 0
      then
        SUCC_COUNT=$(($SUCC_COUNT+1))
        echo "[DEBUG] Test $COUNT $T_NAME side A passed" >> $LOG_PATH/log.txt
      else
        FAIL_COUNT=$(($FAIL_COUNT+1))
        echo "[DEBUG] Test $COUNT $T_NAME side A failed" >> $LOG_PATH/log.txt
fi
}

# Function finishing script
FATAL ()
{
sudo killall -9 screen
screen -wipe
sudo killall -9 sipp
FAIL_COUNT=$(($FAIL_COUNT+999))
}

FUNC_TEST ()
{
        start_screen "$COUNT$T_NAME" "$COMMAND"  
        sleep 0.5
        check_screen "open" "$COUNT$T_NAME"
        if test $? -ne 0; then
                echo "Fatal error - screen failed" >> $LOG_PATH/log.txt
                FATAL
                FINISH
        else   
                $COMMAND_A
                REZULT_A
                wait_uas "$COUNT$T_NAME" 10
                if test $? -eq 99;then 
                        echo "Fatal error - screen timeout" >> $LOG_PATH/log.txt
                        FATAL
                        FINISH
                fi
                sleep 2
        fi
}

# Registration users
T_NAME=Registration
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/reg_auth.xml -inf $TEMP_PATH/$USER_A.csv -mi $IP -s $AUTH_A -ap $PASS_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 200s -timeout_error
REZULT_A
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/reg_auth.xml -inf $TEMP_PATH/$USER_B-ss.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error
REZULT_A
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/reg_auth.xml -inf $TEMP_PATH/$USER_D_CF.csv -mi $IP -s $AUTH_D_CF -ap $PASS_D_CF -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_D_CF -recv_timeout 200s -timeout_error
REZULT_A

COUNT=1
T_NAME="Activate RFC and check"
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/uac_field2.xml -inf $TEMP_PATH/$USER_B-ss.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error
REZULT_A
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/uac_field3.xml -inf $TEMP_PATH/$USER_B-ss.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error
REZULT_A

COUNT=2
T_NAME="Activate CFU on USER_forward"
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/uac_field2.xml -inf $TEMP_PATH/$USER_D_CF.csv -mi $IP -s $AUTH_D_CF -ap $PASS_D_CF -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_D_CF -recv_timeout 200s -timeout_error
REZULT_A

T_NAME="Check reject on forwarded calls"
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/uac_field2_403.xml -inf $TEMP_PATH/$USER_A.csv -mi $IP -s $AUTH_A -ap $PASS_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 200s -timeout_error
REZULT_A
sleep 2

T_NAME="Dectivate CFU on USER_forward"
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/uac_field4.xml -inf $TEMP_PATH/$USER_D_CF.csv -mi $IP -s $AUTH_D_CF -ap $PASS_D_CF -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_D_CF -recv_timeout 200s -timeout_error    
REZULT_A

COUNT=3
T_NAME="Check reject on forwarded calls"
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/uac_field2_403_rfc1.xml -inf $TEMP_PATH/$USER_C-$USER_B.csv -mi $IP -s $AUTH_C -ap $PASS_C -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_C -recv_timeout 200s -timeout_error       
REZULT_A
sleep 2

sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/uac_field2_403_rfc2.xml -inf $TEMP_PATH/$USER_C-$USER_B.csv -mi $IP -s $AUTH_C -ap $PASS_C -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_C -recv_timeout 200s -timeout_error  
REZULT_A
sleep 2

T_NAME="Deactivate RFC"
sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/uac_field4.xml -inf $TEMP_PATH/$USER_B-ss.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error
REZULT_A

COUNT=4
T_NAME="Check_answer_on_not_forwarded_calls"
COMMAND="$SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/1-uas_ssw.xml -mi $IP -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
COMMAND_A="sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/uac_field2_rfc1.xml -inf $TEMP_PATH/$USER_C-$USER_B.csv -mi $IP -s $AUTH_C -ap $PASS_C -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_C -recv_timeout 200s -timeout_error"
FUNC_TEST
sleep 2

COUNT=5
COMMAND="$SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/1-uas_ssw.xml -mi $IP -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
COMMAND_A="sudo $SIPP_PATH/sipp $EXTER_IP -sf $SRC_PATH/uac_field2_rfc2.xml -inf $TEMP_PATH/$USER_C-$USER_B.csv -mi $IP -s $AUTH_C -ap $PASS_C -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_C -recv_timeout 200s -timeout_error"
FUNC_TEST

FINISH
