#!/bin/bash

# Тест ДВО автодозвон с отзвоном. Версия ПО 3.3.
# 
# Условия теста: создано два SIP-абонента 
#              : активированы услуги (выполнен скрипт sswconf_ss_perm.sh)

# Переменные командной строки
# $DEV_USER SSW_cocon_user
# $DEV_PASS SSW_cocon_password
# $DEV_DOMAIN SSW_domain
# $EXTER_IP:$EXTER_PORT SSW_IP_address
# $IP SIPP_IP_address
# $USER_A Number of SIP USER A

. ./conf

# Библиотеки
source $LIB_PATH/screen_lib.sh
source $LIB_PATH/create_lib.sh

# Путь к скриптам
ROOT_DIR=$(pwd)
SRC_PATH=$ROOT_DIR/$SCRYPT_PATH/autoredial_cb
create_dir $SRC_PATH/temp
TEMP_PATH=$SRC_PATH/temp
create_file $TEMP_PATH/ex_code.txt
create_dir log/ssw350_autoredial_cb
LOG_PATH=log/ssw350_autoredial_cb

create_file $LOG_PATH/log.txt

# Путь к sipp
#SIPP_PATH=../../../opt/sipp

# Переменные для подсчета успешных, неуспешных вызовов и номер теста
FAIL_COUNT=0
SUCC_COUNT=0
COUNT=0

# Создаем файлы с данными
echo "SEQUENTIAL;
$USER_A;$DOM_A;" > $TEMP_PATH/$USER_A.csv
echo "SEQUENTIAL;
$USER_B;$DOM_B;" > $TEMP_PATH/$USER_B.csv
echo "SEQUENTIAL;
$USER_A;$DOM_A;*$AUTORED_KOD#;" > $TEMP_PATH/$USER_A-cb1.csv
echo "SEQUENTIAL;
$USER_A;$DOM_A;*$AUTORED_KOD*$USER_B#;" > $TEMP_PATH/$USER_A-cb2.csv
echo "SEQUENTIAL;
$USER_A;$DOM_A;$USER_B;" > $TEMP_PATH/$USER_A-$USER_B.csv
echo "SEQUENTIAL;
$USER_C;$DOM_C;$USER_B" > $TEMP_PATH/$USER_C.csv

FINISH ()
{
# Unregistration
COUNT=$(($COUNT+1))
T_NAME=UnRegistration
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/reg_auth0.xml -inf $TEMP_PATH/$USER_A.csv -mi $IP -s $AUTH_A -ap $PASS_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 200s -timeout_error
REZULT_A
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/reg_auth0.xml -inf $TEMP_PATH/$USER_B.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error
REZULT_A
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/reg_auth0.xml -inf $TEMP_PATH/$USER_C.csv -mi $IP -s $AUTH_C -ap $PASS_C -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_C -recv_timeout 200s -timeout_error
REZULT_A


# Удаляем файлы с данными
sudo rm $TEMP_PATH/$USER_A.csv
sudo rm $TEMP_PATH/$USER_B.csv
sudo rm $TEMP_PATH/$USER_C.csv
sudo rm $TEMP_PATH/$USER_A-cb1.csv
sudo rm $TEMP_PATH/$USER_A-cb2.csv
sudo rm $TEMP_PATH/$USER_A-$USER_B.csv

# Возвращаем исходные настройки
T_NAME=Deconfigure
$SRC_PATH/sswconf_autored3.sh $DEV_USER $DEV_PASS $DEV_DOMAIN $EXTER_IP $USER_A
REZULT_A

#    Читаем exit коды, чтобы убедиться, что все UAS отработали корректно.
EX_FAIL=0
while read line;do
     excode=`echo $line | cut -d ' ' -f 3`
     name=`echo $line | cut -d ' ' -f 1`
     echo "[DEBUG] Exit code from test $name equal $excode" >> $LOG_PATH/log.txt
     if [ "$excode" != "0" ];then
        EX_FAIL=1
        FAIL_COUNT=$(($FAIL_COUNT+1))
     fi
done < $TEMP_PATH/ex_code.txt

sudo rm $TEMP_PATH/ex_code.txt

# Вывод результата  
echo "Success $SUCC_COUNT, Failed $FAIL_COUNT"  

  if [[ $EX_FAIL -eq 0 && $FAIL_COUNT -eq 0 ]]
        then 
        exit 0
        else 
        exit 1
  fi
}

# Функция подсчета успешных и неуспешных вызовов
REZULT_A ()
{
if test $? -eq 0
      then
        SUCC_COUNT=$(($SUCC_COUNT+1))
        echo "[DEBUG] Test $COUNT $T_NAME side A passed" >> $LOG_PATH/log.txt
      else
        FAIL_COUNT=$(($FAIL_COUNT+1))
        echo "[DEBUG] Test $COUNT $T_NAME side A failed" >> $LOG_PATH/log.txt
fi
}

# Function finishing script
FATAL ()
{
sudo killall -9 screen
screen -wipe
sudo killall -9 sipp
FAIL_COUNT=$(($FAIL_COUNT+999))
}

FUNC_TEST ()
{
        start_screen "$COUNT$T_NAME" "$COMMAND"  
        sleep 0.5
        check_screen "open" "$COUNT$T_NAME"
        if test $? -ne 0; then
                echo "Fatal error - screen failed" >> $LOG_PATH/log.txt
                FATAL
                FINISH
        else   
                $COMMAND_A
                REZULT_A
                wait_uas "$COUNT$T_NAME" 10
                if test $? -eq 99;then 
                        echo "Fatal error - screen timeout" >> $LOG_PATH/log.txt
                        FATAL
                        FINISH
                fi
                sleep 2
        fi
}

FUNC_TEST2 ()
{
        start_screen "$COUNT$T_NAME" "$COMMAND"  
        sleep 0.5
        check_screen "open" "$COUNT$T_NAME"
        if test $? -ne 0; then
                echo "Fatal error - screen failed" >> $LOG_PATH/log.txt
                FATAL
                FINISH
        else   
                $COMMAND_A
                REZULT_A
                $COMMAND_B
                REZULT_A
                wait_uas "$COUNT$T_NAME" 10
                if test $? -eq 99;then 
                        echo "Fatal error - screen timeout" >> $LOG_PATH/log.txt
                        FATAL
                        FINISH
                fi
                sleep 2
        fi
}

FUNC_TEST3 ()
{
        start_screen "$COUNT$T_NAME" "$COMMAND"
        sleep 0.5
        check_screen "open" "$COUNT$T_NAME"
        if test $? -ne 0; then
                echo "Fatal error - screen failed" >> $LOG_PATH/log.txt
                FATAL
                FINISH
        else   
        	start_screen "2$COUNT$T_NAME" "$COMMAND2"  
	        sleep 0.5
        	check_screen "open" "2$COUNT$T_NAME"
        	if test $? -ne 0; then
                	echo "Fatal error - screen failed" >> $LOG_PATH/log.txt
                	FATAL
                	FINISH
        	else   
                	$COMMAND_A
                	REZULT_A
                	wait_uas "$COUNT$T_NAME" 100
                        if test $? -eq 99;then 
                                echo "Fatal error - screen timeout" >> $LOG_PATH/log.txt
                                FATAL
                                FINISH
                        fi
			wait_uas "2$COUNT$T_NAME" 100
                	if test $? -eq 99;then 
                        	echo "Fatal error - screen timeout" >> $LOG_PATH/log.txt
                        	FATAL
                        	FINISH
                	fi
		fi
        fi
}

# Конфигурируем услугу
T_NAME=configure
$SRC_PATH/sswconf_autored1cb.sh $DEV_USER $DEV_PASS $DEV_DOMAIN $EXTER_IP $USER_A
REZULT_A

# Registration users
T_NAME=Registration
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/reg_auth.xml -inf $TEMP_PATH/$USER_A.csv -mi $IP -s $USER_A -ap $USER_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 200s -timeout_error
REZULT_A
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/reg_auth.xml -inf $TEMP_PATH/$USER_B.csv -mi $IP -s $USER_B -ap $USER_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error
REZULT_A
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/reg_auth.xml -inf $TEMP_PATH/$USER_C.csv -mi $IP -s $AUTH_C -ap $PASS_C -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_C -recv_timeout 200s -timeout_error
REZULT_A

COUNT=1
T_NAME="Call_to_busy_user_B"
COMMAND="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uas_ans486.xml -mi $IP -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
COMMAND_A="sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/6-uac_ssw.xml -inf $TEMP_PATH/$USER_A-$USER_B.csv -mi $IP -s $USER_A -ap $USER_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 200s -timeout_error"
FUNC_TEST
sleep 2

COUNT=2
echo "Callback with last dialed number (user B busy two times)" >> $LOG_PATH/log.txt
T_NAME=Callback_with_last_dialed_number
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uac_field2.xml -inf $TEMP_PATH/$USER_A-cb1.csv -mi $IP -s $USER_A -ap $USER_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 200s -timeout_error
REZULT_A
COMMAND="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/3-uas_ssw.xml -mi $IP -m 1 -nd -i $IP -p $PORT_A -recv_timeout 200s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
COMMAND_A="sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uas_ans486.xml -mi $IP -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error && \
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uas_ans600.xml -mi $IP -m 1 -nd -i $IP -p $PORT_B -timeout 200s -timeout_error && \
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uas_r1i.xml -mi $IP -m 1 -nd -i $IP -p $PORT_B -timeout 200s -timeout_error"
FUNC_TEST
sleep 2

COUNT=3
echo "Callback with dial number B (user B busy one time, user A busy one time)" >> $LOG_PATH/log.txt
T_NAME=Callback_with_dial_number_B
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uac_field2.xml -inf $TEMP_PATH/$USER_A-cb2.csv -mi $IP -s $USER_A -ap $USER_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 200s -timeout_error
REZULT_A
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uas_ans486.xml -mi $IP -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error
REZULT_A
COMMAND="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uas_r1i.xml -mi $IP -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
COMMAND_A="sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uas_ans486.xml -mi $IP -m 1 -nd -i $IP -p $PORT_A -timeout 200s -timeout_error"
COMMAND_B="sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/3-uas_ssw.xml -mi $IP -m 1 -nd -i $IP -p $PORT_A -timeout 200s -timeout_error"
FUNC_TEST2

COUNT=4
echo "Callback with dial number B (user B busy one time_ssw detect busy, user A busy one time)" >> $LOG_PATH/log.txt
T_NAME=Callback_with_dial_numberB
COMMAND_A="sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uac_field2.xml -inf $TEMP_PATH/$USER_A-cb2.csv -mi $IP -s $USER_A -ap $USER_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 200s -timeout_error -sleep 3"
COMMAND2="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uac_10s.xml -inf $TEMP_PATH/$USER_C.csv -mi $IP -s $AUTH_C -ap $PASS_C -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_C -timeout 200s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
COMMAND="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uas_ssw1.xml -mi $IP -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
FUNC_TEST3
COMMAND="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uas_r1i.xml -mi $IP -m 1 -nd -i $IP -p $PORT_B -recv_timeout 200s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
COMMAND_A="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/uas_ans486.xml -mi $IP -m 1 -nd -i $IP -p $PORT_A -timeout 200s -timeout_error && \
$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/3-uas_ssw.xml -mi $IP -m 1 -nd -i $IP -p $PORT_A -timeout 200s -timeout_error"
FUNC_TEST

FINISH
