#!/bin/bash

# Тест базовых вызовов. Версия ПО 3.4.2
#
# Условия теста: создано два SIP-абонента и один SIP-транк

# Переменные командной строки
# $DEV_USER SSW_cocon_user
# $DEV_PASS SSW_cocon_password
# $DEV_DOMAIN SSW_domain
# $EXTER_IP SSW_IP_address
# $IP SIPP_IP_address

. ./conf

# Библиотеки
source $LIB_PATH/screen_lib.sh
source $LIB_PATH/create_lib.sh

# Путь к скриптам
ROOT_DIR=$(pwd)
SRC_PATH=$ROOT_DIR/$SCRYPT_PATH/basic
create_dir $SRC_PATH/temp
TEMP_PATH=$SRC_PATH/temp
create_file $TEMP_PATH/ex_code.txt
create_dir log/ssw350_basic
LOG_PATH=log/ssw350_basic

create_file $LOG_PATH/log.txt

# Путь к sipp
#SIPP_PATH=../../../opt/sipp

# Создаем файлы с данными
echo "SEQUENTIAL;
$USER_A;$DOM_A;" > $TEMP_PATH/$USER_A.csv
echo "SEQUENTIAL;
$USER_B;$DOM_B;" > $TEMP_PATH/$USER_B.csv
echo "SEQUENTIAL;
$USER_C;$DOM_C;" > $TEMP_PATH/$USER_C.csv
echo "SEQUENTIAL;
$USER_A;$DOM_A;$USER_B;" > $TEMP_PATH/$USER_A-$USER_B.csv
echo "SEQUENTIAL;
$USER_A;$DOM_A;$USER_C;" > $TEMP_PATH/$USER_A-$USER_C.csv
echo "SEQUENTIAL;
$USER_B;$DOM_B;$USER_A;" > $TEMP_PATH/$USER_B-$USER_A.csv
echo "SEQUENTIAL;
$USER_B;$DOM_B;$USER_C;" > $TEMP_PATH/$USER_B-$USER_C.csv
echo "SEQUENTIAL;
$USER_C;$DOM_C;$USER_A;" > $TEMP_PATH/$USER_C-$USER_A.csv
echo "SEQUENTIAL;
$USER_C;$DOM_C;$USER_B;" > $TEMP_PATH/$USER_C-$USER_B.csv
echo "SEQUENTIAL;
$USER_A;$DOM_A;$USER_NR;" > $TEMP_PATH/$USER_A-$USER_NR.csv
echo "SEQUENTIAL;
$USER_A;$DOM_A;$USER_UA;" > $TEMP_PATH/$USER_A-$USER_UA.csv
echo "SEQUENTIAL;
$USER_A;$DOM_A;$USER_NN;" > $TEMP_PATH/$USER_A-$USER_NN.csv
echo "SEQUENTIAL;
$USER_B;$DOM_B;$USER_NR;" > $TEMP_PATH/$USER_B-$USER_NR.csv
echo "SEQUENTIAL;
$USER_B;$DOM_B;$USER_UA;" > $TEMP_PATH/$USER_B-$USER_UA.csv
echo "SEQUENTIAL;
$USER_B;$DOM_B;$USER_NN;" > $TEMP_PATH/$USER_B-$USER_NN.csv
echo "SEQUENTIAL;
$USER_C;$DOM_C;$USER_NR;" > $TEMP_PATH/$USER_C-$USER_NR.csv
echo "SEQUENTIAL;
$USER_C;$DOM_C;$USER_UA;" > $TEMP_PATH/$USER_C-$USER_UA.csv
echo "SEQUENTIAL;
$USER_C;$DOM_C;$USER_NN;" > $TEMP_PATH/$USER_C-$USER_NN.csv

# Переменные для подсчета успешных, неуспешных вызовов и номер теста
FAIL_COUNT=0
SUCC_COUNT=0
COUNT=0

# Функция подсчета успешных и неуспешных вызовов
REZULT_A ()
{
if test $? -eq 0
      then
        SUCC_COUNT=$(($SUCC_COUNT+1))
        echo "[DEBUG] Test $COUNT $T_NAME side A passed" >> $LOG_PATH/log.txt
      else
        FAIL_COUNT=$(($FAIL_COUNT+1))
        echo "[DEBUG] Test $COUNT $T_NAME side A failed" >> $LOG_PATH/log.txt
fi
}

# Function finishing script
FATAL ()
{
sudo killall -9 screen
sudo killall -9 sipp
screen -wipe
FAIL_COUNT=$(($FAIL_COUNT+999))
}

FINISH ()
{

COUNT=$(($COUNT+1))
T_NAME=UnRegistration
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/reg_auth0.xml -inf $TEMP_PATH/$USER_A.csv -mi $IP -s $AUTH_A -ap $PASS_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 20s -timeout_error
REZULT_A
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/reg_auth0.xml -inf $TEMP_PATH/$USER_B.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 20s -timeout_error
REZULT_A

# Удаляем файлы с данными
sudo rm $TEMP_PATH/$USER_A.csv
sudo rm $TEMP_PATH/$USER_B.csv
sudo rm $TEMP_PATH/$USER_C.csv
sudo rm $TEMP_PATH/$USER_A-$USER_B.csv
sudo rm $TEMP_PATH/$USER_A-$USER_C.csv
sudo rm $TEMP_PATH/$USER_B-$USER_A.csv
sudo rm $TEMP_PATH/$USER_B-$USER_C.csv
sudo rm $TEMP_PATH/$USER_C-$USER_A.csv
sudo rm $TEMP_PATH/$USER_C-$USER_B.csv
sudo rm $TEMP_PATH/$USER_A-$USER_NR.csv
sudo rm $TEMP_PATH/$USER_A-$USER_UA.csv
sudo rm $TEMP_PATH/$USER_A-$USER_NN.csv
sudo rm $TEMP_PATH/$USER_B-$USER_NR.csv
sudo rm $TEMP_PATH/$USER_B-$USER_UA.csv
sudo rm $TEMP_PATH/$USER_B-$USER_NN.csv
sudo rm $TEMP_PATH/$USER_C-$USER_NR.csv
sudo rm $TEMP_PATH/$USER_C-$USER_UA.csv
sudo rm $TEMP_PATH/$USER_C-$USER_NN.csv

# Возвращаем исходные значения некоторым таймерам
T_NAME=Configuration_back
$SRC_PATH/sswconf_basic2.sh $DEV_USER $DEV_PASS $DEV_DOMAIN $EXTER_IP
REZULT_A

#    Читаем exit коды, чтобы убедиться, что все UAS отработали корректно.
EX_FAIL=0
while read line;do
     excode=`echo $line | cut -d ' ' -f 3`
     name=`echo $line | cut -d ' ' -f 1`
     echo "[DEBUG] Exit code from test $name equal $excode" >> $LOG_PATH/log.txt
     if [ "$excode" != "0" ];then
        EX_FAIL=1
	FAIL_COUNT=$(($FAIL_COUNT+1))
     fi
done < $TEMP_PATH/ex_code.txt

sudo rm $TEMP_PATH/ex_code.txt

# Вывод результата  
echo "Success $SUCC_COUNT, Failed $FAIL_COUNT"	

  if [[ $EX_FAIL -eq 0 && $FAIL_COUNT -eq 0 ]]
	then 
        exit 0
        else 
        exit 1
  fi
}

# Тест
# Конфигурируем необходимые таймеры
T_NAME=Configuration
$SRC_PATH/sswconf_basic1.sh $DEV_USER $DEV_PASS $DEV_DOMAIN $EXTER_IP
REZULT_A

T_NAME=Registration
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/reg_auth.xml -inf $TEMP_PATH/$USER_A.csv -mi $IP -s $AUTH_A -ap $PASS_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 20s -timeout_error
REZULT_A
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/reg_auth.xml -inf $TEMP_PATH/$USER_B.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 20s -timeout_error
REZULT_A

FUNC_TEST ()
{
        start_screen "$COUNT$T_NAME" "$COMMAND"  
        sleep 0.5
        check_screen "open" "$COUNT$T_NAME"
        if test $? -ne 0; then
                echo "Fatal error - screen failed" >> $LOG_PATH/log.txt
		FATAL
                FINISH
        else   
		$COMMAND_A
                REZULT_A
                wait_uas "$COUNT$T_NAME" 10
                if test $? -eq 99;then 
                        echo "Fatal error - screen timeout" >> $LOG_PATH/log.txt
			FATAL
                        FINISH
                fi
                sleep 2
        fi
}

while [ $COUNT -lt 10 ] 
do
	COUNT=$(($COUNT+1))
        T_NAME=Call_A-B
	COMMAND="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/$COUNT-uas_ssw.xml -mi $IP -m 1 -nd -i $IP -p $PORT_B -recv_timeout 120s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
	COMMAND_A="sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/$COUNT-uac_ssw.xml -inf $TEMP_PATH/$USER_A-$USER_B.csv -mi $IP -s $AUTH_A -ap $PASS_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 120s -timeout_error"
	FUNC_TEST

	T_NAME=Call_A-C
        COMMAND="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/$COUNT-uas_ssw.xml -mi $IP -m 1 -nd -i $IP -p $PORT_C -recv_timeout 120s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
	COMMAND_A="sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/$COUNT-uac_ssw.xml -inf $TEMP_PATH/$USER_A-$USER_C.csv -mi $IP -s $AUTH_A -ap $PASS_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 120s -timeout_error"
	FUNC_TEST

	T_NAME=Call_B-A
        COMMAND="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/$COUNT-uas_ssw.xml -mi $IP -m 1 -nd -i $IP -p $PORT_A -recv_timeout 120s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
        COMMAND_A="sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/$COUNT-uac_ssw.xml -inf $TEMP_PATH/$USER_B-$USER_A.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 120s -timeout_error"
	FUNC_TEST

	T_NAME=Call_B-C
        COMMAND="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/$COUNT-uas_ssw.xml -mi $IP -m 1 -nd -i $IP -p $PORT_C -recv_timeout 120s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
        COMMAND_A="sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/$COUNT-uac_ssw.xml -inf $TEMP_PATH/$USER_B-$USER_C.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 120s -timeout_error"
	FUNC_TEST

	T_NAME=Call_C-A
        COMMAND="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/$COUNT-uas_ssw.xml -mi $IP -m 1 -nd -i $IP -p $PORT_A -recv_timeout 120s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
        COMMAND_A="sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/$COUNT-uac_ssw.xml -inf $TEMP_PATH/$USER_C-$USER_A.csv -mi $IP -s $AUTH_C -ap $PASS_C -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_C -recv_timeout 120s -timeout_error"
	FUNC_TEST

	T_NAME=Call_C-B
        COMMAND="$SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/$COUNT-uas_ssw.xml -mi $IP -m 1 -nd -i $IP -p $PORT_B -recv_timeout 120s -timeout_error; echo $COUNT $T_NAME \$? >> $TEMP_PATH/ex_code.txt"
        COMMAND_A="sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/$COUNT-uac_ssw.xml -inf $TEMP_PATH/$USER_C-$USER_B.csv -mi $IP -s $AUTH_C -ap $PASS_C -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_C -recv_timeout 120s -timeout_error"
	FUNC_TEST
done

COUNT=$(($COUNT+1))
T_NAME=Call_A-NotReg
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/11-uac_ssw.xml -inf $TEMP_PATH/$USER_A-$USER_NR.csv -mi $IP -s $AUTH_A -ap $PASS_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 120s -timeout_error
REZULT_A
T_NAME=Call_B-NotReg
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/11-uac_ssw.xml -inf $TEMP_PATH/$USER_B-$USER_NR.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 120s -timeout_error
REZULT_A
T_NAME=Call_C-NotReg
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/11-uac_ssw.xml -inf $TEMP_PATH/$USER_C-$USER_NR.csv -mi $IP -s $AUTH_C -ap $PASS_C -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_C -recv_timeout 120s -timeout_error 
REZULT_A

COUNT=$(($COUNT+1))
T_NAME=Call_A-UnAllocated
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/12-uac_ssw.xml -inf $TEMP_PATH/$USER_A-$USER_UA.csv -mi $IP -s $AUTH_A -ap $PASS_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 120s -timeout_error 
REZULT_A
T_NAME=Call_B-UnAvail
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/12-uac_ssw.xml -inf $TEMP_PATH/$USER_B-$USER_UA.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 120s -timeout_error
REZULT_A
T_NAME=Call_C-UnAvail
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/12-uac_ssw.xml -inf $TEMP_PATH/$USER_C-$USER_UA.csv -mi $IP -s $AUTH_C -ap $PASS_C -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_C -recv_timeout 120s -timeout_error
REZULT_A

COUNT=$(($COUNT+1))
T_NAME=Call_A-NoDestination
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/13-uac_ssw.xml -inf $TEMP_PATH/$USER_A-$USER_NN.csv -mi $IP -s $AUTH_A -ap $PASS_A -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_A -recv_timeout 120s -timeout_error 
REZULT_A
T_NAME=Call_B-NoDestination
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/13-uac_ssw.xml -inf $TEMP_PATH/$USER_B-$USER_NN.csv -mi $IP -s $AUTH_B -ap $PASS_B -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_B -recv_timeout 120s -timeout_error 
REZULT_A
T_NAME=Call_C-NoDestination
sudo $SIPP_PATH/sipp $EXTER_IP:$EXTER_PORT -sf $SRC_PATH/13-uac_ssw.xml -inf $TEMP_PATH/$USER_C-$USER_NN.csv -mi $IP -s $AUTH_C -ap $PASS_C -rtp_echo -l 1 -r 1 -m 1 -nd -i $IP -p $PORT_C -recv_timeout 120s -timeout_error        
REZULT_A

FINISH
